enum RequestStatus {
  CREATED
  APPROVED
  DENIED
  CANCELED
  DEPLOYED
}

enum EventType {
  Stake
  Unstake
  Claim
}

type Request @entity {
  id: ID!

  deployer: Bytes!

  requestStatus: RequestStatus!

  stakeToken: Token!

  rewardToken: Token!

  rewardPerSecond: BigInt!

  poolStartTime: BigInt!

  poolEndTime: BigInt!

  unstakeLockUpTime: BigInt!

  claimLockUpTime: BigInt!

  penaltyPeriod: BigInt!
}

type Factory @entity {
  id: ID!

  totalPools: BigInt!

  poolAddress: [String!]!
}

type Token @entity(immutable: true) {
  id: ID!

  name: String!

  symbol: String!

  decimals: BigInt!
}

type Pool @entity {
  id: ID!

  stakeToken: Token!
  
  rewardToken: Token!
  
  startTime: BigInt!
  
  endTime: BigInt!
  
  rewardTokenPerSecond: BigInt!
  
  totalStaked: BigInt!
  
  totalClaimed: BigInt!

  accRewardPerShare: BigInt!

  lastRewardTimestamp: BigInt!

  owner: String!
  
  # List of users participating in the pool
  users: [History!]! @derivedFrom(field: "pool")
}

type History @entity {
  id: ID!

  user: User!

  pool: Pool!

  amount: BigInt!

  timestamp: BigInt!

  event_type: EventType!
}

type User @entity {
  id: ID!
   
  amount: BigInt!
 
  claimed: BigInt!
 
  rewardDebt: BigInt!
 
  pending: BigInt!

  address: Bytes!
 
  pools: [History!]! @derivedFrom(field: "user")
}